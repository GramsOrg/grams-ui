(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{"./node_modules/css-loader/dist/cjs.js?!./node_modules/postcss-loader/dist/cjs.js?!./src/components/GramsIcon/GramsIcon.css":function(module,exports,__webpack_require__){(exports=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(!1)).push([module.i,"",""]),module.exports=exports},"./src/components/GramsIcon/GramsIcon.css":function(module,exports,__webpack_require__){var api=__webpack_require__("./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),content=__webpack_require__("./node_modules/css-loader/dist/cjs.js?!./node_modules/postcss-loader/dist/cjs.js?!./src/components/GramsIcon/GramsIcon.css");"string"==typeof(content=content.__esModule?content.default:content)&&(content=[[module.i,content,""]]);var options={insert:"head",singleton:!1};api(content,options);module.exports=content.locals||{}},"./src/components/GramsIcon/GramsIcon.stories.jsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Default",(function(){return Default})),__webpack_require__.d(__webpack_exports__,"RTL",(function(){return RTL}));__webpack_require__("./node_modules/core-js/modules/es.object.keys.js"),__webpack_require__("./node_modules/core-js/modules/es.array.index-of.js"),__webpack_require__("./node_modules/core-js/modules/es.symbol.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/core-js/modules/es.function.bind.js"),__webpack_require__("./node_modules/react/index.js"),__webpack_require__("./node_modules/@storybook/addon-actions/dist/esm/index.js"),__webpack_require__("./node_modules/core-js/modules/es.function.name.js");var Icon=__webpack_require__("./node_modules/semantic-ui-react/dist/es/elements/Icon/Icon.js"),jsx_runtime=(__webpack_require__("./src/components/GramsIcon/GramsIcon.css"),__webpack_require__("./node_modules/react/jsx-runtime.js")),GramsIcon_GramsIcon_GramsIcon=function GramsIcon(props){return Object(jsx_runtime.jsx)(Icon.a,{name:props.name,size:props.size})};GramsIcon_GramsIcon_GramsIcon.displayName="GramsIcon",GramsIcon_GramsIcon_GramsIcon.defaultProps={dir:"ltr",inverted:!1,size:"large",fallback:!0};var components_GramsIcon_GramsIcon=GramsIcon_GramsIcon_GramsIcon;try{GramsIcon_GramsIcon_GramsIcon.displayName="GramsIcon",GramsIcon_GramsIcon_GramsIcon.__docgenInfo={description:"",displayName:"GramsIcon",props:{dir:{defaultValue:{value:"ltr"},description:"Defines the direction of the component",name:"dir",required:!1,type:{name:"enum",value:[{value:'"ltr"'},{value:'"rtl"'}]}},inverted:{defaultValue:{value:"false"},description:"Toggles between light and dark modes",name:"inverted",required:!1,type:{name:"boolean"}},name:{defaultValue:null,description:"Name of the icon to display.",name:"name",required:!0,type:{name:"string"}},size:{defaultValue:{value:"large"},description:"The size of the icon.",name:"size",required:!1,type:{name:"enum",value:[{value:'"large"'},{value:'"mini"'},{value:'"tiny"'},{value:'"small"'},{value:'"big"'},{value:'"huge"'},{value:'"massive"'}]}},fallback:{defaultValue:{value:"true"},description:"Whether to fallback to React icons if the Semantic UI icon is not found.",name:"fallback",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/GramsIcon/GramsIcon.tsx#GramsIcon"]={docgenInfo:GramsIcon_GramsIcon_GramsIcon.__docgenInfo,name:"GramsIcon",path:"src/components/GramsIcon/GramsIcon.tsx#GramsIcon"})}catch(__react_docgen_typescript_loader_error){}var _excluded=["dir","inverted"];function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}__webpack_exports__.default={title:"General/GramsIcon",component:components_GramsIcon_GramsIcon,parameters:{storySource:{source:"import React from 'react';\n\nimport { action } from \"@storybook/addon-actions\";\n\nimport GramsIcon from './GramsIcon.tsx';\n\nexport default {\n  title: 'General/GramsIcon',\n  component: GramsIcon,\n  parameters: {\n    componentSubtitle: 'Component description',\n    storyshots: { disable: false },\n  },\n  argTypes: {\n    dir: {\n      control: 'radio',\n      options: ['ltr', 'rtl']\n    },\n    inverted: {\n      control: 'boolean'\n    }\n  }\n};\n\nconst Template = ({dir, inverted, ...props}) => {\n  return (\n    <GramsIcon\n      dir={dir}\n      inverted={inverted}\n      {...props}\n    />\n  );\n};\n\nexport const Default = Template.bind({});\nDefault.args = {\n  dir: 'ltr',\n  inverted: false,\n  name: 'world'\n}\n\nexport const RTL = Template.bind({});\nRTL.args = {\n  dir: 'rtl',\n  inverted: false,\n  name: 'user'\n}\n",locationsMap:{default:{startLoc:{col:17,line:25},endLoc:{col:1,line:33},startBody:{col:17,line:25},endBody:{col:1,line:33}},rtl:{startLoc:{col:17,line:25},endLoc:{col:1,line:33},startBody:{col:17,line:25},endBody:{col:1,line:33}}}},componentSubtitle:"Component description",storyshots:{disable:!1}},argTypes:{dir:{control:"radio",options:["ltr","rtl"]},inverted:{control:"boolean"}}};var GramsIcon_stories_Template=function Template(_ref){var dir=_ref.dir,inverted=_ref.inverted,props=_objectWithoutProperties(_ref,_excluded);return Object(jsx_runtime.jsx)(components_GramsIcon_GramsIcon,Object.assign({dir:dir,inverted:inverted},props))};GramsIcon_stories_Template.displayName="Template";var Default=GramsIcon_stories_Template.bind({});Default.args={dir:"ltr",inverted:!1,name:"world"};var RTL=GramsIcon_stories_Template.bind({});RTL.args={dir:"rtl",inverted:!1,name:"user"},Default.parameters=Object.assign({storySource:{source:"({dir, inverted, ...props}) => {\n  return (\n    <GramsIcon\n      dir={dir}\n      inverted={inverted}\n      {...props}\n    />\n  );\n}"}},Default.parameters),RTL.parameters=Object.assign({storySource:{source:"({dir, inverted, ...props}) => {\n  return (\n    <GramsIcon\n      dir={dir}\n      inverted={inverted}\n      {...props}\n    />\n  );\n}"}},RTL.parameters)}}]);